Sliding puzzle instructions

0.) We are going to use as much of the original unown_puzzle code as possible. Don't write new stuff unless you have to - we are going bit by bit! For example, 'puzcoord' is already defined in unown_puzzle, so we would either not define it or use a new definition. 

0a.) Lots of macros and other things are already defined in the original unown_puzzle. Earlier efforts were hamstrung because we couldn't keep track of what was in which file.

0b.) The puzzle piece LZ graphics are "alphabet" rather than "celebi". 

0c.) The puzzle piece borders are tile_borders_2. This is basically the same as tile_borders but with a twist. 

1.) Pieces should initially load into the middle 4x4 of the puzzle, not to the sides, as is the case in unownpuzzle.

2.) We import the graphics the same way that the unown_puzzle does, using the enlargement. 

4.) Puzzle pieces are labeled as: 
C 
F
L
N
O
R
S
T
U
Y
BLANK
12
13
14
15
16

4.) Namespace conflicts: The new file should have its own names for things, eg slidepuz_coord instead of puzcoord. 

5.) File structure: A completely separate ASM file that can coexist in the same ROM as the unown_puzzle.

6.) Special constant and naming: Let's call it SlidingPuzzle throughout, as opposed to UnownPuzzle. 

7.) Use the original script variable. I don't know how to debug this. 

8.) The graphics files already exist. 

9.) Start cancel box functionality preserved 

10.) Victory: An event flag will be set in overworld asm file that interacts with the puzzle and an hscriptvalue will be returned.



The following we will do later -- don't worry about these yet. DO NOT PROGRAM THIS YET - IT'S JUST TO KEEP TRACK OF TODOS!
12.) We need to place the following in either an arbitrary or a random manner, whichever is easier: 
; in order: C F L N O R S T U Y, where C is the first tile, F is the second tile imported, and so on
; to place: c x1, f x1, l x2, n x1, o x4, r x2, s x1, t x1, u x1, y x1, BLANK x1 -- the numbered puzzle pieces don't get placed. 


13.) Solution: 
; N O C S 
; F O R BLANK
; Y O U R
; T O L L 

14.) Tiles can only move within the 4x4 grid and only by swapping with the blank tile. 

1